apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    name: kube-admin-manager
  name: kube-admin-manager
  namespace: openshift-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  labels:
    name: kube-admin-manager
  name: kube-admin-manager
  namespace: kube-system
rules:
  - apiGroups:
      - ''
    resourceNames:
      - kubeadmin
    resources:
      - secrets
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  labels:
    name: kube-admin-manager
  name: kube-admin-manager
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-admin-manager
subjects:
  - kind: ServiceAccount
    name: kube-admin-manager
    namespace: openshift-config
---
apiVersion: espejote.io/v1alpha1
kind: ManagedResource
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  labels:
    app.kubernetes.io/component: openshift4-authentication
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: remove-kube-admin
  name: remove-kube-admin
  namespace: openshift-config
spec:
  serviceAccountRef:
    name: kube-admin-manager
  template: |
    local esp = import 'espejote.libsonnet';
    local kubeadminSecret = {
      apiVersion: 'v1',
      kind: 'Secret',
      metadata: {
        name: 'kubeadmin',
        namespace: 'kube-system',
      }
    };
    esp.markForDelete(kubeadminSecret)
  triggers: []
